import React, { createContext, useContext, useState, useEffect } from "react";

export type Language = {
  code: string;
  name: string;
};

export const languages = [
  { code: "en", name: "English" },
  { code: "hi", name: "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä" }, // Hindi
  { code: "kn", name: "‡≤ï‡≤®‡≥ç‡≤®‡≤°" }, // Kannada
  { code: "ta", name: "‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç" }, // Tamil
  { code: "te", name: "‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å" }, // Telugu
  { code: "ml", name: "‡¥Æ‡¥≤‡¥Ø‡¥æ‡¥≥‡¥Ç" }, // Malayalam
];

type LanguageContextType = {
  currentLanguage: Language;
  setLanguage: (language: Language) => void;
  translate: (key: string) => string;
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

const translations: Record<string, Record<string, string>> = {
  en: {
    home: "Home",
    explore: "Explore",
    storyshare: "StoryShare",
    shoplocal: "MyShop",
    travelbuddy: "Travel Buddy",
    badges: "Badges",
    startexploring: "Start Exploring",
    "footer.discoverheritage":
      "Discover Hidden Heritage. Empower Communities. Travel with Purpose.",
    "footer.explorehead": "Explore",
    "footer.heritagesites": "Heritage Sites",
    "footer.culturalstories": "Cultural Stories",
    "footer.artisanproducts": "Artisan Products",
    "footer.findcotravelers": "Find Co-Travelers",
    "footer.sustainabletourism": "Sustainable Tourism",
    "footer.resourceshead": "Resources",
    "footer.aboutus": "About Us",
    "footer.ourmission": "Our Mission",
    "footer.termsofservice": "Terms of Service",
    "footer.privacypolicy": "Privacy Policy",
    "footer.contactus": "Contact Us",
    "footer.newsletterhead": "Newsletter",
    "footer.newsletterdesc":
      "Subscribe to our newsletter for the latest updates on cultural heritage sites and local events.",
    "footer.youremail": "Your email",
    "footer.subscribe": "Subscribe",
    "footer.allrightsreserved": "All rights reserved.",
    "footer.madewith": "Made by Hackathon Winners",
    // New features translations
    culturalknowledge: "Cultural Knowledge Graph",
    interactivemapping: "Interactive Cultural Mapping",
    educationalnetwork: "Educational Institution Network",
  },
  hi: {
    home: "‡§π‡•ã‡§Æ",
    explore: "‡§è‡§ï‡•ç‡§∏‡§™‡•ç‡§≤‡•ã‡§∞",
    storyshare: "‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Ç",
    shoplocal: "‡§≤‡•ã‡§ï‡§≤ ‡§∂‡•â‡§™",
    travelbuddy: "‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§∏‡§æ‡§•‡•Ä",
    badges: "‡§¨‡•à‡§ú",
    startexploring: "‡§è‡§ï‡•ç‡§∏‡§™‡•ç‡§≤‡•ã‡§∞ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    "footer.discoverheritage":
      "‡§õ‡•Å‡§™‡•Ä ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§ ‡§ï‡•ã ‡§ñ‡•ã‡§ú‡•á‡§Ç‡•§ ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§∂‡§ï‡•ç‡§§ ‡§¨‡§®‡§æ‡§è‡§Ç‡•§ ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§",
    "footer.explorehead": "‡§è‡§ï‡•ç‡§∏‡§™‡•ç‡§≤‡•ã‡§∞",
    "footer.heritagesites": "‡§µ‡§ø‡§∞‡§æ‡§∏‡§§ ‡§∏‡•ç‡§•‡§≤",
    "footer.culturalstories": "‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Ç",
    "footer.artisanproducts": "‡§ï‡§æ‡§∞‡•Ä‡§ó‡§∞ ‡§â‡§§‡•ç‡§™‡§æ‡§¶",
    "footer.findcotravelers": "‡§∏‡§π-‡§Ø‡§æ‡§§‡•ç‡§∞‡•Ä ‡§ñ‡•ã‡§ú‡•á‡§Ç",
    "footer.sustainabletourism": "‡§∏‡§∏‡•ç‡§ü‡•á‡§®‡•á‡§¨‡§≤ ‡§™‡§∞‡•ç‡§Ø‡§ü‡§®",
    "footer.resourceshead": "‡§∏‡§Ç‡§∏‡§æ‡§ß‡§®",
    "footer.aboutus": "‡§π‡§Æ‡§æ‡§∞‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
    "footer.ourmission": "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Æ‡§ø‡§∂‡§®",
    "footer.termsofservice": "‡§∏‡•á‡§µ‡§æ ‡§ï‡•Ä ‡§∂‡§∞‡•ç‡§§‡•á‡§Ç",
    "footer.privacypolicy": "‡§ó‡•ã‡§™‡§®‡•Ä‡§Ø‡§§‡§æ ‡§®‡•Ä‡§§‡§ø",
    "footer.contactus": "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
    "footer.newsletterhead": "‡§®‡•ç‡§Ø‡•Ç‡§ú‡§º‡§≤‡•á‡§ü‡§∞",
    "footer.newsletterdesc":
      "‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§ ‡§∏‡•ç‡§•‡§≤‡•ã‡§Ç ‡§î‡§∞ ‡§∏‡•ç‡§•‡§æ‡§®‡•Ä‡§Ø ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ‡•ã‡§Ç ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§Ö‡§™‡§°‡•á‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è ‡§π‡§Æ‡§æ‡§∞‡•á ‡§®‡•ç‡§Ø‡•Ç‡§ú‡§º‡§≤‡•á‡§ü‡§∞ ‡§ï‡•Ä ‡§∏‡§¶‡§∏‡•ç‡§Ø‡§§‡§æ ‡§≤‡•á‡§Ç‡•§",
    "footer.youremail": "‡§Ü‡§™‡§ï‡§æ ‡§à‡§Æ‡•á‡§≤",
    "footer.subscribe": "‡§∏‡§¶‡§∏‡•ç‡§Ø‡§§‡§æ ‡§≤‡•á‡§Ç",
    "footer.allrightsreserved": "‡§∏‡§∞‡•ç‡§µ‡§æ‡§ß‡§ø‡§ï‡§æ‡§∞ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§ø‡§§‡•§",
    "footer.madewith":
      "‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§µ‡§ø‡§∞‡§æ‡§∏‡§§ ‡§ï‡•ã ‡§∏‡§Ç‡§∞‡§ï‡•ç‡§∑‡§ø‡§§ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è üíñ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ",
    // New features translations
    culturalknowledge: "‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§ú‡•ç‡§û‡§æ‡§® ‡§ó‡•ç‡§∞‡§æ‡§´",
    interactivemapping: "‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§Æ‡•à‡§™‡§ø‡§Ç‡§ó",
    educationalnetwork: "‡§∂‡•à‡§ï‡•ç‡§∑‡§ø‡§ï ‡§∏‡§Ç‡§∏‡•ç‡§•‡§æ‡§® ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï",
  },
  kn: {
    home: "‡≤Æ‡≥Å‡≤ñ‡≤™‡≥Å‡≤ü",
    explore: "‡≤Ö‡≤®‡≥ç‡≤µ‡≥á‡≤∑‡≤ø‡≤∏‡≤ø",
    storyshare: "‡≤ï‡≤•‡≥Ü‡≤ó‡≤≥‡≥Å",
    shoplocal: "‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø ‡≤Ö‡≤Ç‡≤ó‡≤°‡≤ø",
    travelbuddy: "‡≤™‡≥ç‡≤∞‡≤Ø‡≤æ‡≤£ ‡≤∏‡≤Ç‡≤ó‡≤æ‡≤§‡≤ø",
    badges: "‡≤¨‡≥ç‡≤Ø‡≤æ‡≤°‡≥ç‡≤ú‡≥ç‚Äå‡≤ó‡≤≥‡≥Å",
    startexploring: "‡≤Ö‡≤®‡≥ç‡≤µ‡≥á‡≤∑‡≤ø‡≤∏‡≤≤‡≥Å ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≤ø",
    "footer.discoverheritage":
      "‡≤Ö‡≤°‡≤ó‡≤ø‡≤∞‡≥Å‡≤µ ‡≤™‡≤∞‡≤Ç‡≤™‡≤∞‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤Ç‡≤°‡≥Å‡≤π‡≤ø‡≤°‡≤ø‡≤Ø‡≤ø‡≤∞‡≤ø. ‡≤∏‡≤Æ‡≥Å‡≤¶‡≤æ‡≤Ø‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≤¨‡≤≤‡≥Ä‡≤ï‡≤∞‡≤£‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≤ø. ‡≤â‡≤¶‡≥ç‡≤¶‡≥á‡≤∂‡≤¶‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤™‡≥ç‡≤∞‡≤Ø‡≤æ‡≤£‡≤ø‡≤∏‡≤ø.",
    "footer.explorehead": "‡≤Ö‡≤®‡≥ç‡≤µ‡≥á‡≤∑‡≤ø‡≤∏‡≤ø",
    "footer.heritagesites": "‡≤™‡≤∞‡≤Ç‡≤™‡≤∞‡≥Ü‡≤Ø ‡≤§‡≤æ‡≤£‡≤ó‡≤≥‡≥Å",
    "footer.culturalstories": "‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø‡≤ï ‡≤ï‡≤•‡≥Ü‡≤ó‡≤≥‡≥Å",
    "footer.artisanproducts": "‡≤ï‡≥Å‡≤∂‡≤≤‡≤ï‡≤∞‡≥ç‡≤Æ‡≤ø ‡≤â‡≤§‡≥ç‡≤™‡≤®‡≥ç‡≤®‡≤ó‡≤≥‡≥Å",
    "footer.findcotravelers": "‡≤∏‡≤π-‡≤™‡≥ç‡≤∞‡≤Ø‡≤æ‡≤£‡≤ø‡≤ï‡≤∞‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥Å‡≤°‡≥Å‡≤ï‡≤ø",
    "footer.sustainabletourism": "‡≤∏‡≥Å‡≤∏‡≥ç‡≤•‡≤ø‡≤∞ ‡≤™‡≥ç‡≤∞‡≤µ‡≤æ‡≤∏‡≥ã‡≤¶‡≥ç‡≤Ø‡≤Æ",
    "footer.resourceshead": "‡≤∏‡≤Ç‡≤™‡≤®‡≥ç‡≤Æ‡≥Ç‡≤≤‡≤ó‡≤≥‡≥Å",
    "footer.aboutus": "‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü",
    "footer.ourmission": "‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤Æ‡≤ø‡≤∑‡≤®‡≥ç",
    "footer.termsofservice": "‡≤∏‡≥á‡≤µ‡≤æ ‡≤®‡≤ø‡≤Ø‡≤Æ‡≤ó‡≤≥‡≥Å",
    "footer.privacypolicy": "‡≤ó‡≥å‡≤™‡≥ç‡≤Ø‡≤§‡≤æ ‡≤®‡≥Ä‡≤§‡≤ø",
    "footer.contactus": "‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï‡≤ø‡≤∏‡≤ø",
    "footer.newsletterhead": "‡≤®‡≥ç‡≤Ø‡≥Ç‡≤∏‡≥ç‚Äå‡≤≤‡≥Ü‡≤ü‡≤∞‡≥ç",
    "footer.newsletterdesc":
      "‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø‡≤ï ‡≤™‡≤∞‡≤Ç‡≤™‡≤∞‡≥Ü‡≤Ø ‡≤§‡≤æ‡≤£‡≤ó‡≤≥‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø ‡≤ï‡≤æ‡≤∞‡≥ç‡≤Ø‡≤ï‡≥ç‡≤∞‡≤Æ‡≤ó‡≤≥ ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤á‡≤§‡≥ç‡≤§‡≥Ä‡≤ö‡≤ø‡≤® ‡≤Ö‡≤™‡≥ç‚Äå‡≤°‡≥á‡≤ü‡≥ç‚Äå‡≤ó‡≤≥‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø ‡≤®‡≤Æ‡≥ç‡≤Æ ‡≤®‡≥ç‡≤Ø‡≥Ç‡≤∏‡≥ç‚Äå‡≤≤‡≥Ü‡≤ü‡≤∞‡≥ç‚Äå‡≤ó‡≥Ü ‡≤ö‡≤Ç‡≤¶‡≤æ‡≤¶‡≤æ‡≤∞‡≤∞‡≤æ‡≤ó‡≤ø.",
    "footer.youremail": "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤á‡≤Æ‡≥á‡≤≤‡≥ç",
    "footer.subscribe": "‡≤ö‡≤Ç‡≤¶‡≤æ‡≤¶‡≤æ‡≤∞‡≤∞‡≤æ‡≤ó‡≤ø",
    "footer.allrightsreserved": "‡≤é‡≤≤‡≥ç‡≤≤‡≤æ ‡≤π‡≤ï‡≥ç‡≤ï‡≥Å‡≤ó‡≤≥‡≤®‡≥ç‡≤®‡≥Å ‡≤ï‡≤æ‡≤Ø‡≥ç‡≤¶‡≤ø‡≤∞‡≤ø‡≤∏‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü.",
    "footer.madewith": "‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø‡≤ï ‡≤™‡≤∞‡≤Ç‡≤™‡≤∞‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤∏‡≤Ç‡≤∞‡≤ï‡≥ç‡≤∑‡≤ø‡≤∏‡≤≤‡≥Å üíñ ‡≤®‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤≤‡≤æ‡≤ó‡≤ø‡≤¶‡≥Ü",
    // New features translations
    culturalknowledge: "‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø‡≤ï ‡≤ú‡≥ç‡≤û‡≤æ‡≤® ‡≤ó‡≥ç‡≤∞‡≤æ‡≤´‡≥ç",
    interactivemapping: "‡≤∏‡≤Ç‡≤µ‡≤æ‡≤¶‡≤æ‡≤§‡≥ç‡≤Æ‡≤ï ‡≤∏‡≤æ‡≤Ç‡≤∏‡≥ç‡≤ï‡≥É‡≤§‡≤ø‡≤ï ‡≤Æ‡≥ç‡≤Ø‡≤æ‡≤™‡≤ø‡≤Ç‡≤ó‡≥ç",
    educationalnetwork: "‡≤∂‡≥à‡≤ï‡≥ç‡≤∑‡≤£‡≤ø‡≤ï ‡≤∏‡≤Ç‡≤∏‡≥ç‡≤•‡≥Ü ‡≤®‡≥Ü‡≤ü‡≥ç‡≤µ‡≤∞‡≥ç‡≤ï‡≥ç",
  },
  // Add more translations for other languages similarly...
};

// Default fallback for languages that don't have full translations yet
const fallbackLanguages: Record<string, string> = {
  ta: "en",
  te: "en",
  ml: "en",
};

export function LanguageProvider({ children }: { children: React.ReactNode }) {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(
    languages[0]
  );

  // Load saved language preference from localStorage
  useEffect(() => {
    const savedLanguageCode = localStorage.getItem("vistara-language");
    if (savedLanguageCode) {
      const savedLanguage = languages.find(
        (lang) => lang.code === savedLanguageCode
      );
      if (savedLanguage) {
        setCurrentLanguage(savedLanguage);
      }
    }
  }, []);

  const setLanguage = (language: Language) => {
    localStorage.setItem("vistara-language", language.code);
    setCurrentLanguage(language);
  };

  const translate = (key: string): string => {
    // First try the current language
    if (translations[currentLanguage.code]?.[key]) {
      return translations[currentLanguage.code][key];
    }

    // If not found and there's a fallback language defined, try that
    const fallback = fallbackLanguages[currentLanguage.code];
    if (fallback && translations[fallback]?.[key]) {
      return translations[fallback][key];
    }

    // Default to English if all else fails
    if (translations["en"]?.[key]) {
      return translations["en"][key];
    }

    // Return the key itself if no translation is found
    return key;
  };

  return (
    <LanguageContext.Provider
      value={{ currentLanguage, setLanguage, translate }}
    >
      {children}
    </LanguageContext.Provider>
  );
}

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};
